<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://blog.jez.io/atom.xml" rel="self" type="application/atom+xml" /><link href="https://blog.jez.io/" rel="alternate" type="text/html" /><updated>2023-04-24T00:37:27-04:00</updated><id>https://blog.jez.io/atom.xml</id><title type="html">Jake Zimmerman</title><subtitle>A collection of blog posts about programming, software, types, programming languages, Sorbet, Vim, Markdown, and more.</subtitle><author><name>Jake Zimmerman</name></author><entry><title type="html">Every type is defined by its intro and elim forms</title><link href="https://blog.jez.io/intro-elim/" rel="alternate" type="text/html" title="Every type is defined by its intro and elim forms" /><published>2023-04-23T19:43:00-04:00</published><updated>2023-04-23T19:43:00-04:00</updated><id>https://blog.jez.io/intro-elim</id><author><name>Jake Zimmerman</name></author><category term="programming" /><category term="plt" /><category term="types" /><summary type="html"><![CDATA[I took a course about programming languages in college. It was a very theory-oriented course, but as it turned out I learned more about how to write software from this theory course than many of my peers who took our school's software engineering elective.]]></summary></entry><entry><title type="html">Typing klass.new in Ruby with Sorbet</title><link href="https://blog.jez.io/typing-klass-new/" rel="alternate" type="text/html" title="Typing klass.new in Ruby with Sorbet" /><published>2023-02-19T22:34:27-05:00</published><updated>2023-02-19T22:34:27-05:00</updated><id>https://blog.jez.io/typing-klass-new</id><author><name>Jake Zimmerman</name></author><category term="sorbet" /><category term="ruby" /><category term="types" /><summary type="html"><![CDATA[The straightforward attempt at writing a Sorbet signature for a method that calls `klass.new` doesn't work. The strategy that does work uses abstract methods, and so I'd like to walk through an extended example showing how to get such code to typecheck.]]></summary></entry><entry><title type="html">Ruby’s private keyword is weird</title><link href="https://blog.jez.io/ruby-private/" rel="alternate" type="text/html" title="Ruby’s private keyword is weird" /><published>2023-02-13T13:58:43-05:00</published><updated>2023-02-13T13:58:43-05:00</updated><id>https://blog.jez.io/ruby-private</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="scala" /><summary type="html"><![CDATA[Ruby's `private` keyword means something different compared to basically all other object-oriented languages. Most other languages don't even have a feature matching what Ruby calls `private`, but incredibly, Scala does, which it calls `protected[this]` (meaning "object-protected", as opposed to the normal `protected` keyword which is called "class-protected"). First let's review what `private` normally means, and then discuss what `private` in Ruby means (which will also amount to an explanation of what `protected[this]` means in Scala).]]></summary></entry><entry><title type="html">Problems typing equality in Ruby</title><link href="https://blog.jez.io/problems-typing-ruby-equality/" rel="alternate" type="text/html" title="Problems typing equality in Ruby" /><published>2023-01-24T16:12:15-05:00</published><updated>2023-01-24T16:12:15-05:00</updated><id>https://blog.jez.io/problems-typing-ruby-equality</id><author><name>Jake Zimmerman</name></author><category term="sorbet" /><category term="types" /><category term="ruby" /><summary type="html"><![CDATA[TypeScript has this really handy error that flags when it looks like two values of unrelated types are getting compared. I would love to build the same error into Sorbet, but there are two features which make that hard: custom overrides of `==` and subtyping. Here are some heuristics we might consider building in Sorbet, and why they don't work.]]></summary></entry><entry><title type="html">Making Sorbet more incremental</title><link href="https://blog.jez.io/making-sorbet-more-incremental/" rel="alternate" type="text/html" title="Making Sorbet more incremental" /><published>2023-01-09T09:19:36-05:00</published><updated>2023-01-09T09:19:36-05:00</updated><id>https://blog.jez.io/making-sorbet-more-incremental</id><author><name>Jake Zimmerman</name></author><category term="sorbet" /><category term="language-servers" /><summary type="html"><![CDATA[← Return home My main focus last year was improving the Sorbet editor experience: making Sorbet feel snappier while powering language-aware editor features. The biggest improvements came from making Sorbet more incremental. By being smarter about skipping redundant work, we slashed the time it takes for Sorbet to do things like update the list of errors, populate autocompletion suggestions, and jump between definitions and usages.]]></summary></entry><entry><title type="html">Runtime type checking is great</title><link href="https://blog.jez.io/runtime-type-checking/" rel="alternate" type="text/html" title="Runtime type checking is great" /><published>2023-01-03T13:15:03-05:00</published><updated>2023-01-03T13:15:03-05:00</updated><id>https://blog.jez.io/runtime-type-checking</id><author><name>Jake Zimmerman</name></author><category term="sorbet" /><category term="types" /><summary type="html"><![CDATA[Checking type annotations at runtime—in addition to statically—is a net win in a gradual type system. In many cases runtime checking only _seems_ like it comes with more costs, when in fact they're the same costs, paid earlier. When there are net-new costs, there are ways to minimize them, and runtime-checked type annotations come with some key benefits that makes working in a gradually-typed codebase easier.]]></summary></entry><entry><title type="html">Gripes with RSS after one week</title><link href="https://blog.jez.io/rss-after-one-week/" rel="alternate" type="text/html" title="Gripes with RSS after one week" /><published>2022-12-31T00:01:09-05:00</published><updated>2022-12-31T00:01:09-05:00</updated><id>https://blog.jez.io/rss-after-one-week</id><author><name>Jake Zimmerman</name></author><category term="rss" /><category term="fragment" /><summary type="html"><![CDATA[A quick experience report with using an RSS reader for a week. Overall, I'm happy with how things are turning out, but I have a lot of gripes.]]></summary></entry><entry><title type="html">Moving to excerpt-only for feeds</title><link href="https://blog.jez.io/rss-excerpt-only/" rel="alternate" type="text/html" title="Moving to excerpt-only for feeds" /><published>2022-12-30T16:50:17-05:00</published><updated>2022-12-30T16:50:17-05:00</updated><id>https://blog.jez.io/rss-excerpt-only</id><author><name>Jake Zimmerman</name></author><category term="meta" /><category term="rss" /><summary type="html"><![CDATA[I've been struggling to get the RSS version of my posts to look good in the presence of all the features my blog supports (side notes, line highlights on code blocks, light- and dark-mode images, etc.). With that in mind, I'm switching to share only a link and a post summary in the feed, omitting the full content.]]></summary></entry><entry><title type="html">My workflow for hand-drawn diagrams</title><link href="https://blog.jez.io/hand-drawn-diagrams/" rel="alternate" type="text/html" title="My workflow for hand-drawn diagrams" /><published>2022-12-13T17:10:22-05:00</published><updated>2022-12-13T17:10:22-05:00</updated><id>https://blog.jez.io/hand-drawn-diagrams</id><author><name>Jake Zimmerman</name></author><category term="meta" /><summary type="html"><![CDATA[Here's how I draw the little diagrams that sometimes appear on my posts.]]></summary></entry><entry><title type="html">Some Old Sorbet Compiler Notes</title><link href="https://blog.jez.io/old-compiler-notes/" rel="alternate" type="text/html" title="Some Old Sorbet Compiler Notes" /><published>2022-12-10T17:38:00-05:00</published><updated>2022-12-10T17:38:00-05:00</updated><id>https://blog.jez.io/old-compiler-notes</id><author><name>Jake Zimmerman</name></author><category term="meta" /><category term="sorbet" /><category term="sorbet-compiler" /><summary type="html"><![CDATA[Today I'm publshing a few of my old, internal-facing notes about the Sorbet Compiler here to my blog.]]></summary></entry></feed>