<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://blog.jez.io/feed/ruby.xml" rel="self" type="application/atom+xml" /><link href="https://blog.jez.io/" rel="alternate" type="text/html" /><updated>2022-12-31T03:16:05-05:00</updated><id>https://blog.jez.io/feed/ruby.xml</id><title type="html">Jake Zimmerman | Ruby</title><subtitle>A collection of blog posts about programming, software, types, programming languages, Sorbet, Vim, Markdown, and more.</subtitle><author><name>Jake Zimmerman</name></author><entry><title type="html">Sorbet’s weird approach to exception handling</title><link href="https://blog.jez.io/sorbet-rescue-control-flow/" rel="alternate" type="text/html" title="Sorbet’s weird approach to exception handling" /><published>2022-09-04T23:12:12-04:00</published><updated>2022-09-04T23:12:12-04:00</updated><id>https://blog.jez.io/sorbet-rescue-control-flow</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="types" /><summary type="html"><![CDATA[A quick post explaining why exception handling in Sorbet is weird, by way of a buggy program and some pretty pictures.]]></summary></entry><entry><title type="html">Control Flow in Sorbet is Syntactic</title><link href="https://blog.jez.io/syntactic-control-flow/" rel="alternate" type="text/html" title="Control Flow in Sorbet is Syntactic" /><published>2022-08-24T17:30:43-04:00</published><updated>2022-08-24T17:30:43-04:00</updated><id>https://blog.jez.io/syntactic-control-flow</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="types" /><summary type="html"><![CDATA[An exploration of why Sorbet lets control flow affect variables' types, but not methods' types.]]></summary></entry><entry><title type="html">What would a type-aware Rubocop look like?</title><link href="https://blog.jez.io/type-aware-rubocop/" rel="alternate" type="text/html" title="What would a type-aware Rubocop look like?" /><published>2022-05-16T16:17:20-04:00</published><updated>2022-05-16T16:17:20-04:00</updated><id>https://blog.jez.io/type-aware-rubocop</id><author><name>Jake Zimmerman</name></author><category term="sorbet" /><category term="ruby" /><category term="rubocop" /><summary type="html"><![CDATA[From time to time, someone asks, "Would Sorbet ever allow defining some sort of type-aware lint rules?" My answer has usually been "no," for a couple of reasons.]]></summary></entry><entry><title type="html">Sorbet, Generics, and Parametricity</title><link href="https://blog.jez.io/sorbet-parametricity/" rel="alternate" type="text/html" title="Sorbet, Generics, and Parametricity" /><published>2022-02-18T02:59:55-05:00</published><updated>2022-02-18T02:59:55-05:00</updated><id>https://blog.jez.io/sorbet-parametricity</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="plt" /><summary type="html"><![CDATA[There's an interesting property in programming languages with generic types called "parametricity" that says all functions with a given generic type have to behave similarly, which is a powerful tool for understanding generic code.]]></summary></entry><entry><title type="html">Typed Errors in Sorbet</title><link href="https://blog.jez.io/typed-errors-sorbet/" rel="alternate" type="text/html" title="Typed Errors in Sorbet" /><published>2021-06-05T01:12:37-04:00</published><updated>2021-06-05T01:12:37-04:00</updated><id>https://blog.jez.io/typed-errors-sorbet</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="types" /><summary type="html"><![CDATA[Sorbet's union types in method returns provide a low-friction, high value way to model how methods can fail.]]></summary></entry><entry><title type="html">Sorbet Does Not Have Checked Exceptions</title><link href="https://blog.jez.io/union-types-checked-exceptions/" rel="alternate" type="text/html" title="Sorbet Does Not Have Checked Exceptions" /><published>2021-05-29T04:21:41-04:00</published><updated>2021-05-29T04:21:41-04:00</updated><id>https://blog.jez.io/union-types-checked-exceptions</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="types" /><summary type="html"><![CDATA[Sorbet does not support checked exceptions, and I don't think it ever should.]]></summary></entry><entry><title type="html">perf, Rinse, Repeat: Making the Sorbet Compiler faster</title><link href="https://blog.jez.io/perf-rinse-repeat/" rel="alternate" type="text/html" title="perf, Rinse, Repeat: Making the Sorbet Compiler faster" /><published>2021-05-23T20:43:22-04:00</published><updated>2021-05-23T20:43:22-04:00</updated><id>https://blog.jez.io/perf-rinse-repeat</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="debugging" /><category term="sorbet-compiler" /><summary type="html"><![CDATA[TODO]]></summary></entry><entry><title type="html">Instant Runtime Type Checks in Ruby</title><link href="https://blog.jez.io/instant-runtime-type-checks-in-ruby/" rel="alternate" type="text/html" title="Instant Runtime Type Checks in Ruby" /><published>2021-04-25T20:13:11-04:00</published><updated>2021-04-25T20:13:11-04:00</updated><id>https://blog.jez.io/instant-runtime-type-checks-in-ruby</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="sorbet-compiler" /><summary type="html"><![CDATA[A dive into runtime type checking, like the kind used in Sorbet signatures, and how the Sorbet Compiler can speed it up.]]></summary></entry><entry><title type="html">GC.compact in Pictures</title><link href="https://blog.jez.io/gc-compact-in-pictures/" rel="alternate" type="text/html" title="GC.compact in Pictures" /><published>2020-12-18T15:03:58-05:00</published><updated>2020-12-18T15:03:58-05:00</updated><id>https://blog.jez.io/gc-compact-in-pictures</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><summary type="html"><![CDATA[Ruby's opt-in GC compaction is both really cool and also kind of scary, so we're going to chat about both, with pictures.]]></summary></entry><entry><title type="html">Mimicking Opaque Types in Sorbet</title><link href="https://blog.jez.io/mimicking-opaque-types-in-sorbet/" rel="alternate" type="text/html" title="Mimicking Opaque Types in Sorbet" /><published>2020-12-12T20:45:47-05:00</published><updated>2020-12-12T20:45:47-05:00</updated><id>https://blog.jez.io/mimicking-opaque-types-in-sorbet</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="sorbet" /><category term="types" /><summary type="html"><![CDATA[I saw a neat trick the other day for how to combine a handful of Sorbet's existing features to mimic opaque types.]]></summary></entry></feed>